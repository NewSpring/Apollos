// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The FrequencyInput component should render correctly 1`] = `
<View
  style={
    Object {
      "marginVertical": 20,
    }
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        collapsable={undefined}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#303030",
              "fontFamily": "Colfax-Bold",
              "fontSize": 15.75,
              "height": 40,
              "lineHeight": 30,
              "paddingBottom": 1.8,
              "paddingTop": 4.5,
              "paddingVertical": 5,
            }
          }
        >
          every two weeks
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          }
        }
      >
        <View
          collapsable={undefined}
          style={
            Object {
              "transform": Array [
                Object {
                  "rotate": "0deg",
                },
              ],
            }
          }
        >
          <Svg
            height={18}
            viewBox="0 0 24 24"
            width={18}
          >
            <Path
              d="M12 18c-.16 0-.32-.06-.46-.2L3 9.66 3.9 8l8.1 7.72L20.1 8l.9 1.65-8.54 8.16c-.14.15-.3.2-.46.2z"
              fill="#303030"
            />
          </Svg>
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "borderTopColor": "rgba(133, 133, 133, 0.30000000000000004)",
          "borderTopWidth": 0.5,
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "rgba(221, 221, 221, 0.09999999999999998)",
            "padding": 10,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          onPress={[Function]}
          style={
            Object {
              "color": "#6bac43",
              "textDecorationLine": "underline",
            }
          }
        >
          Done
        </Text>
      </View>
      <View
        style={
          Object {
            "borderTopColor": "#dddddd",
            "borderTopWidth": 0.5,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "one time",
                "textColor": undefined,
                "value": "once",
              },
              Object {
                "label": "every week",
                "textColor": undefined,
                "value": "weekly",
              },
              Object {
                "label": "every two weeks",
                "textColor": undefined,
                "value": "biweekly",
              },
              Object {
                "label": "once a month",
                "textColor": undefined,
                "value": "monthly",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={2}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </Modal>
  <View
    collapsable={undefined}
    onLayout={[Function]}
    pointerEvents="none"
    style={
      Object {
        "bottom": 0,
        "justifyContent": "center",
        "opacity": 0.8,
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "scale": 0.8,
          },
          Object {
            "translateX": 0,
          },
          Object {
            "translateY": 0,
          },
        ],
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "#505050",
          "fontFamily": "Colfax-Bold",
          "fontSize": 15.75,
          "lineHeight": 17.75,
          "paddingBottom": 1.8,
          "paddingTop": 4.5,
          "paddingVertical": 5,
        }
      }
    >
      Frequency
    </Text>
  </View>
  <View
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "right": 0,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#dddddd",
          "bottom": -0.5,
          "height": 0.5,
        }
      }
    />
    <View
      collapsable={undefined}
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
          "transform": Array [
            Object {
              "scaleX": 0.0001,
            },
          ],
        }
      }
    >
      <View
        hasError={false}
        style={
          Object {
            "backgroundColor": "#6bac43",
            "bottom": 0,
            "height": 0.5,
          }
        }
      />
    </View>
  </View>
</View>
`;
