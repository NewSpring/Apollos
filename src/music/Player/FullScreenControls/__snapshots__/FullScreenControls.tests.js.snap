// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The FullScreenControls component should hide player settings controls if only playing one track 1`] = `
<View
  backgroundColor="red"
  style={
    Object {
      "backgroundColor": "red",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      Object {
        "aspectRatio": 1,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        collapsable={undefined}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "height": 150,
              "uri": "https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084",
              "width": 150,
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#858585",
            "height": "100%",
            "opacity": 0,
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <ExponentLinearGradient
        colors={
          Array [
            16711680,
            4294901760,
          ]
        }
        endPoint={
          Array [
            0,
            1,
          ]
        }
        locations={
          Array [
            0.3,
            1,
          ]
        }
        startPoint={
          Array [
            0,
            0,
          ]
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    style={
      Object {
        "flex": 1,
        "justifyContent": "space-around",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingHorizontal": 20,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "Colfax-Bold",
            "fontSize": 25.2,
            "lineHeight": 31.28,
            "paddingBottom": 3.71,
            "paddingTop": 5.04,
            "textAlign": "center",
          }
        }
      >
        My track
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "Colfax-Regular",
            "fontSize": 14,
            "lineHeight": 15.78,
            "paddingBottom": 1.8,
            "paddingTop": 3.6,
            "textAlign": "center",
          }
        }
      >
        My Byline
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Svg
            height={32}
            viewBox="0 0 24 24"
            width={32}
          >
            <Path
              d="M11.846 4.168v15.67c0 1.238-.772 1.534-1.725.658l-7.4-6.805c-.95-.87-.96-2.3-.01-3.18l7.44-6.97c.95-.88 1.71-.59 1.71.64zm-1.625 0c0-.118-.01-.176 0-.165.07.155.24.328.52.43.28.103.53.09.7.026.02-.01-.04.03-.13.11l-7.44 6.98c-.32.3-.31.78.01 1.08l7.4 6.8c.09.08.14.11.13.11-.162-.06-.41-.07-.68.03-.26.1-.43.27-.5.42-.002.01.008-.05.008-.16V4.17zm11.78 0v15.67c0 1.238-.75 1.523-1.69.633l-7.47-7.12c-.93-.89-.91-2.31.05-3.18l7.38-6.67c.95-.87 1.73-.57 1.73.67zm-1.62 0c0-.115-.01-.17 0-.16.07.148.24.313.49.413.26.1.51.1.67.04.02 0-.03.03-.12.11l-7.38 6.66c-.32.29-.33.78-.012 1.08l7.47 7.13c.09.09.14.12.125.11-.173-.07-.433-.09-.712.02-.274.1-.45.28-.52.44-.004.01.006-.04.006-.16V4.17z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Svg
            height={48}
            viewBox="0 0 24 24"
            width={48}
          >
            <Path
              d="M7 3h1.67v18H7V3zm8.33 0H17v18h-1.67V3z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Svg
            height={32}
            viewBox="0 0 24 24"
            width={32}
          >
            <Path
              d="M13.78 4.168v15.67c0 .116.01.173.004.16-.07-.15-.238-.318-.502-.42-.265-.1-.512-.09-.678-.03-.013.006.038-.028.127-.11l7.404-6.805c.322-.296.325-.784.006-1.083l-7.437-6.977c-.09-.084-.142-.12-.13-.114.17.062.424.074.697-.028.272-.103.442-.276.514-.43.005-.012-.005.046-.005.164zm-1.626 0c0-1.24.763-1.528 1.707-.642l7.44 6.977c.943.885.935 2.31-.02 3.188l-7.4 6.808c-.952.876-1.724.58-1.724-.657V4.168zM2 4.168c0-1.24.78-1.54 1.737-.674l7.377 6.667c.96.87.978 2.297.048 3.185L3.69 20.47c-.934.89-1.69.606-1.69-.63V4.167zm1.625 0v15.67c0 .12.01.178.005.166-.072-.157-.245-.332-.522-.436-.28-.105-.54-.09-.712-.022-.015.005.036-.03.124-.113l7.472-7.13c.313-.297.306-.784-.017-1.075L2.6 4.56c-.09-.078-.14-.11-.126-.106.164.06.407.066.665-.033.255-.1.42-.262.49-.41.003-.01-.007.045-.007.16z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "paddingHorizontal": 20,
          "paddingVertical": 20,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignItems": "center",
              "color": "#ffffff",
              "fontFamily": "Colfax-Regular",
              "fontSize": 14,
              "lineHeight": 15.78,
              "paddingBottom": 1.8,
              "paddingTop": 3.6,
              "textAlign": "center",
              "width": 50,
            }
          }
        >
          0
          :
          00
        </Text>
        <View
          style={
            Object {
              "marginHorizontal": 20,
              "minWidth": "65%",
              "overflow": "visible",
              "paddingHorizontal": 10,
              "paddingVertical": 7,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "backgroundColor": "rgba(255, 255, 255, 0.30000000000000004)",
                "borderRadius": 6,
                "height": 6,
                "overflow": "hidden",
              }
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
          </View>
          <View
            collapsable={undefined}
            style={
              Object {
                "bottom": 0,
                "overflow": "visible",
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 20,
                  "elevation": 2,
                  "height": 20,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 20,
                  "zIndex": 100,
                }
              }
            />
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignItems": "center",
              "color": "#ffffff",
              "fontFamily": "Colfax-Regular",
              "fontSize": 14,
              "lineHeight": 15.78,
              "paddingBottom": 1.8,
              "paddingTop": 3.6,
              "textAlign": "center",
              "width": 50,
            }
          }
        >
          5:30
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 20,
            }
          }
        >
          <Svg
            height={32}
            viewBox="0 0 24 24"
            width={32}
          >
            <Path
              d="M12 18c-.16 0-.32-.06-.46-.2L3 9.66 3.9 8l8.1 7.72L20.1 8l.9 1.65-8.54 8.16c-.14.15-.3.2-.46.2z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`The FullScreenControls component should render 1`] = `
<View
  backgroundColor="red"
  style={
    Object {
      "backgroundColor": "red",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      Object {
        "aspectRatio": 1,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <Image
        collapsable={undefined}
        onLoad={[Function]}
        source={
          Array [
            Object {
              "height": 150,
              "uri": "https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084",
              "width": 150,
            },
          ]
        }
        style={
          Object {
            "backgroundColor": "#858585",
            "height": "100%",
            "opacity": 0,
            "resizeMode": "cover",
            "width": "100%",
          }
        }
      />
      <ExponentLinearGradient
        colors={
          Array [
            16711680,
            4294901760,
          ]
        }
        endPoint={
          Array [
            0,
            1,
          ]
        }
        locations={
          Array [
            0.3,
            1,
          ]
        }
        startPoint={
          Array [
            0,
            0,
          ]
        }
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
  <RCTSafeAreaView
    style={
      Object {
        "flex": 1,
        "justifyContent": "space-around",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "paddingHorizontal": 20,
          "paddingVertical": 0,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "Colfax-Bold",
            "fontSize": 25.2,
            "lineHeight": 31.28,
            "paddingBottom": 3.71,
            "paddingTop": 5.04,
            "textAlign": "center",
          }
        }
      >
        My track
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#ffffff",
            "fontFamily": "Colfax-Regular",
            "fontSize": 14,
            "lineHeight": 15.78,
            "paddingBottom": 1.8,
            "paddingTop": 3.6,
            "textAlign": "center",
          }
        }
      >
        My Byline
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Svg
            height={32}
            viewBox="0 0 24 24"
            width={32}
          >
            <Path
              d="M11.846 4.168v15.67c0 1.238-.772 1.534-1.725.658l-7.4-6.805c-.95-.87-.96-2.3-.01-3.18l7.44-6.97c.95-.88 1.71-.59 1.71.64zm-1.625 0c0-.118-.01-.176 0-.165.07.155.24.328.52.43.28.103.53.09.7.026.02-.01-.04.03-.13.11l-7.44 6.98c-.32.3-.31.78.01 1.08l7.4 6.8c.09.08.14.11.13.11-.162-.06-.41-.07-.68.03-.26.1-.43.27-.5.42-.002.01.008-.05.008-.16V4.17zm11.78 0v15.67c0 1.238-.75 1.523-1.69.633l-7.47-7.12c-.93-.89-.91-2.31.05-3.18l7.38-6.67c.95-.87 1.73-.57 1.73.67zm-1.62 0c0-.115-.01-.17 0-.16.07.148.24.313.49.413.26.1.51.1.67.04.02 0-.03.03-.12.11l-7.38 6.66c-.32.29-.33.78-.012 1.08l7.47 7.13c.09.09.14.12.125.11-.173-.07-.433-.09-.712.02-.274.1-.45.28-.52.44-.004.01.006-.04.006-.16V4.17z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Svg
            height={48}
            viewBox="0 0 24 24"
            width={48}
          >
            <Path
              d="M7 3h1.67v18H7V3zm8.33 0H17v18h-1.67V3z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
      <View
        style={
          Object {
            "paddingHorizontal": 20,
            "paddingVertical": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Svg
            height={32}
            viewBox="0 0 24 24"
            width={32}
          >
            <Path
              d="M13.78 4.168v15.67c0 .116.01.173.004.16-.07-.15-.238-.318-.502-.42-.265-.1-.512-.09-.678-.03-.013.006.038-.028.127-.11l7.404-6.805c.322-.296.325-.784.006-1.083l-7.437-6.977c-.09-.084-.142-.12-.13-.114.17.062.424.074.697-.028.272-.103.442-.276.514-.43.005-.012-.005.046-.005.164zm-1.626 0c0-1.24.763-1.528 1.707-.642l7.44 6.977c.943.885.935 2.31-.02 3.188l-7.4 6.808c-.952.876-1.724.58-1.724-.657V4.168zM2 4.168c0-1.24.78-1.54 1.737-.674l7.377 6.667c.96.87.978 2.297.048 3.185L3.69 20.47c-.934.89-1.69.606-1.69-.63V4.167zm1.625 0v15.67c0 .12.01.178.005.166-.072-.157-.245-.332-.522-.436-.28-.105-.54-.09-.712-.022-.015.005.036-.03.124-.113l7.472-7.13c.313-.297.306-.784-.017-1.075L2.6 4.56c-.09-.078-.14-.11-.126-.106.164.06.407.066.665-.033.255-.1.42-.262.49-.41.003-.01-.007.045-.007.16z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "paddingHorizontal": 20,
          "paddingVertical": 20,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignItems": "center",
              "color": "#ffffff",
              "fontFamily": "Colfax-Regular",
              "fontSize": 14,
              "lineHeight": 15.78,
              "paddingBottom": 1.8,
              "paddingTop": 3.6,
              "textAlign": "center",
              "width": 50,
            }
          }
        >
          0
          :
          00
        </Text>
        <View
          style={
            Object {
              "marginHorizontal": 20,
              "minWidth": "65%",
              "overflow": "visible",
              "paddingHorizontal": 10,
              "paddingVertical": 7,
            }
          }
        >
          <View
            onLayout={[Function]}
            style={
              Object {
                "backgroundColor": "rgba(255, 255, 255, 0.30000000000000004)",
                "borderRadius": 6,
                "height": 6,
                "overflow": "hidden",
              }
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
          </View>
          <View
            collapsable={undefined}
            style={
              Object {
                "bottom": 0,
                "overflow": "visible",
                "position": "absolute",
                "right": 0,
                "top": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
                "width": "100%",
              }
            }
          >
            <View
              onMoveShouldSetResponder={[Function]}
              onMoveShouldSetResponderCapture={[Function]}
              onResponderEnd={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderReject={[Function]}
              onResponderRelease={[Function]}
              onResponderStart={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              onStartShouldSetResponderCapture={[Function]}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderRadius": 20,
                  "elevation": 2,
                  "height": 20,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 20,
                  "zIndex": 100,
                }
              }
            />
          </View>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "alignItems": "center",
              "color": "#ffffff",
              "fontFamily": "Colfax-Regular",
              "fontSize": 14,
              "lineHeight": 15.78,
              "paddingBottom": 1.8,
              "paddingTop": 3.6,
              "textAlign": "center",
              "width": 50,
            }
          }
        >
          5:30
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "paddingHorizontal": 20,
              "paddingVertical": 20,
            }
          }
        >
          <Svg
            height={32}
            viewBox="0 0 24 24"
            width={32}
          >
            <Path
              d="M12 18c-.16 0-.32-.06-.46-.2L3 9.66 3.9 8l8.1 7.72L20.1 8l.9 1.65-8.54 8.16c-.14.15-.3.2-.46.2z"
              fill="#ffffff"
            />
          </Svg>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
